# Makefile target for the distributed k6 test

k6-distributed-test:
	@if [ -z "$(VMUSER)" ]; then \
		echo "Error: VMUSER environment variable is not set."; \
		exit 1; \
	fi
	@echo "--- Waiting for hermione pod ---"
	kubectl wait --for=condition=Ready pod -l app=hermione -n vetchium-devtest-$(VMUSER) --timeout=5m

	@echo "--- Creating k6 distributed test resources ---"
	# Update the ConfigMap with user-provided parameters
	sed -e "s/\$${VMUSER}/$(VMUSER)/g" \
	    -e "s/TOTAL_USERS: \"1000000\"/TOTAL_USERS: \"$${NUM_USERS:-1000000}\"/g" \
	    -e "s/TEST_DURATION: \"1800\"/TEST_DURATION: \"$${TEST_DURATION:-1800}\"/g" \
	    -e "s/MAX_VUS: \"100\"/MAX_VUS: \"$${MAX_VUS:-100}\"/g" \
	    -e "s/INSTANCE_COUNT: \"10\"/INSTANCE_COUNT: \"$${INSTANCE_COUNT:-10}\"/g" \
	    -e "s/SETUP_PARALLELISM: \"100\"/SETUP_PARALLELISM: \"$${SETUP_PARALLELISM:-100}\"/g" \
	    neville/k6-distributed.yaml > /tmp/k6-distributed-$(VMUSER).yaml

	@echo "--- Copying test script to ConfigMap ---"
	kubectl create configmap k6-test-script --from-file=distributed_hub_scenario.js=neville/distributed_hub_scenario.js -n vetchium-devtest-$(VMUSER) --dry-run=client -o yaml | kubectl apply -f -

	@echo "--- Starting distributed k6 test ---"
	kubectl apply -f /tmp/k6-distributed-$(VMUSER).yaml -n vetchium-devtest-$(VMUSER)

	@echo "--- Test started! ---"
	@echo "Monitor the test with: kubectl logs -f job/k6-distributed-test -n vetchium-devtest-$(VMUSER)"
	@echo "Individual worker logs: kubectl logs -f job/k6-worker -n vetchium-devtest-$(VMUSER) --selector=job-name=k6-worker"
