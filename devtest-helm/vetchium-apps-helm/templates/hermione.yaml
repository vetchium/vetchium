apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-hermione-config
data:
  config.json: |
    {
      "employer": {
        "web_url": {{ .Values.hermione.config.employerWebUrl | quote }},
        "tfa_tok_life": {{ .Values.hermione.config.employerTfaTokLife | quote }},
        "session_tok_life": {{ .Values.hermione.config.employerSessionTokLife | quote }},
        "lts_tok_life": {{ .Values.hermione.config.employerLtsTokLife | quote }},
        "employee_invite_tok_life": {{ .Values.hermione.config.employerEmployeeInviteTokLife | quote }}
      },
      "hub": {
        "web_url": {{ .Values.hermione.config.hubWebUrl | quote }},
        "tfa_tok_life": {{ .Values.hermione.config.hubTfaTokLife | quote }},
        "session_tok_life": {{ .Values.hermione.config.hubSessionTokLife | quote }},
        "lts_tok_life": {{ .Values.hermione.config.hubLtsTokLife | quote }},
        "hub_user_invite_tok_life": {{ .Values.hermione.config.hubUserInviteTokLife | quote }}
      },
      "port": {{ .Values.hermione.config.port | quote }},
      "timing_attack_delay": {{ .Values.hermione.config.timingAttackDelay | quote }},
      "password_reset_tok_life": {{ .Values.hermione.config.passwordResetTokLife | quote }}
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hermione
spec:
  replicas: {{ .Values.hermione.replicaCount }}
  selector:
    matchLabels:
      app: hermione
  template:
    metadata:
      labels:
        app: hermione
        version: {{ .Values.hermione.image.tag | default .Values.global.imageTag }}
    spec:
      serviceAccountName: {{ .Release.Name }}-hermione-sa
      initContainers:
        - name: wait-for-sqitch
          image: {{ .Values.hermione.initContainer.kubectlImage }}
          command:
            - /bin/sh
            - -c
            - |
              until kubectl get jobs -l app=sqitch -n {{ .Release.Namespace }} -o jsonpath='{.items[-1].status.succeeded}' | grep -q '1'; do
                echo "Waiting for latest sqitch job to complete..."
                sleep 5
              done
      containers:
        - name: hermione
          image: "{{ .Values.hermione.image.repository }}:{{ .Values.hermione.image.tag | default .Values.global.imageTag }}"
          ports:
            - containerPort: {{ .Values.hermione.config.port | int }}
          env:
            - name: POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hermione.secrets.postgres }}
                  key: uri
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hermione.secrets.s3 }}
                  key: access_key
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hermione.secrets.s3 }}
                  key: bucket
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hermione.secrets.s3 }}
                  key: endpoint
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hermione.secrets.s3 }}
                  key: region
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hermione.secrets.s3 }}
                  key: secret_key
          volumeMounts:
            - name: config-volume
              mountPath: /etc/hermione-config
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-hermione-config
---
apiVersion: v1
kind: Service
metadata:
  name: hermione
spec:
  type: {{ .Values.hermione.service.type }}
  selector:
    app: hermione
  ports:
    - protocol: TCP
      port: {{ .Values.hermione.service.port }}
      targetPort: {{ .Values.hermione.config.port | int }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-hermione-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-hermione-access-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: full-access
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-hermione-sa
    namespace: {{ .Release.Namespace }}
