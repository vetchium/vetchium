apiVersion: v1
kind: ConfigMap
metadata:
  name: sortinghat-config
data:
  config.json: |
    {
      "port": {{ .Values.sortinghat.config.port | quote }}
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sortinghat
  labels:
    app: sortinghat
    version: {{ .Values.global.imageTag | default .Chart.AppVersion }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    # Model versions for tracking and debugging
    model-name/e5-base-v2: "intfloat/e5-base-v2"
    model-name/bge-base-v1.5: "BAAI/bge-base-en-v1.5"
    model-name/contriever-msmarco: "facebook/contriever-msmarco"
    # Image information with tags
    image-name/e5-base-v2: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat-model-e5-base-v2:{{ .Values.global.imageTag }}"
    image-name/bge-base-v1.5: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat-model-bge-base-v1.5:{{ .Values.global.imageTag }}"
    image-name/contriever-msmarco: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat-model-contriever-msmarco:{{ .Values.global.imageTag }}"
    image-name/runtime: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat:{{ .Values.global.imageTag }}"
    # Deployment metadata
    deployment/model-count: "3"
    deployment/created-by: "helm"
    deployment/chart-version: {{ .Chart.Version | quote }}
    deployment/release-name: {{ .Release.Name | quote }}
    deployment/deployment-time: {{ now | date "2006-01-02T15:04:05Z" | quote }}
spec:
  replicas: {{ .Values.sortinghat.replicaCount }}
  selector:
    matchLabels:
      app: sortinghat
  template:
    metadata:
      labels:
        app: sortinghat
        version: {{ .Values.sortinghat.image.tag | default .Values.global.imageTag }}
    spec:
      serviceAccountName: sortinghat-sa
      # Init container to download and prepare models
      initContainers:
        - name: e5-base-v2-model-downloader
          image: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat-model-e5-base-v2:{{ .Values.global.imageTag }}"
          command: ['sh', '-c', 'cp -r /models/* /shared-models/']
          volumeMounts:
            - name: model-storage
              mountPath: /shared-models
          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
        - name: bge-base-v1-5-model-downloader
          image: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat-model-bge-base-v1.5:{{ .Values.global.imageTag }}"
          command: ['sh', '-c', 'cp -r /models/* /shared-models/']
          volumeMounts:
            - name: model-storage
              mountPath: /shared-models
          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
        - name: contriever-msmarco-model-downloader
          image: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat-model-contriever-msmarco:{{ .Values.global.imageTag }}"
          command: ['sh', '-c', 'cp -r /models/* /shared-models/']
          volumeMounts:
            - name: model-storage
              mountPath: /shared-models
          resources:
            requests:
              memory: "1Gi"
              cpu: "100m"
            limits:
              memory: "2Gi"
              cpu: "500m"
      containers:
        - name: sortinghat
          image: "{{ .Values.global.registry | default "ghcr.io/vetchium" }}/sortinghat:{{ .Values.global.imageTag }}"
          ports:
            - containerPort: {{ .Values.sortinghat.config.port | int }}
          # Mount the shared model volumes
          volumeMounts:
            - name: model-storage
              mountPath: /models
              readOnly: true
            - name: config-volume
              mountPath: /etc/sortinghat-config
          env:
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: endpoint
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: secret_key
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: region
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: bucket
            # Model cache environment variables
            - name: HF_HOME
              value: "/models/huggingface"
            - name: TRANSFORMERS_CACHE
              value: "/models/huggingface"
            - name: SENTENCE_TRANSFORMERS_HOME
              value: "/models/sentence-transformers"
          resources:
            requests:
              memory: {{ .Values.sortinghat.resources.requests.memory | quote }}
              cpu: {{ .Values.sortinghat.resources.requests.cpu | quote }}
            limits:
              memory: {{ .Values.sortinghat.resources.limits.memory | quote }}
              cpu: {{ .Values.sortinghat.resources.limits.cpu | quote }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.sortinghat.config.port | int }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.sortinghat.config.port | int }}
            initialDelaySeconds: 10
            periodSeconds: 5
      # Shared volumes for model storage
      volumes:
        - name: model-storage
          emptyDir:
            sizeLimit: 12Gi  # Three models: ~9.6GB actual total + copy buffer
        - name: config-volume
          configMap:
            name: sortinghat-config
---
apiVersion: v1
kind: Service
metadata:
  name: sortinghat
spec:
  type: {{ .Values.sortinghat.service.type }}
  selector:
    app: sortinghat
  ports:
    - protocol: TCP
      port: {{ .Values.sortinghat.service.port }}
      targetPort: {{ .Values.sortinghat.config.port }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sortinghat-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-sortinghat-full-access-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: full-access
subjects:
  - kind: ServiceAccount
    name: sortinghat-sa
    namespace: {{ .Release.Namespace }}
