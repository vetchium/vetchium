apiVersion: v1
kind: ConfigMap
metadata:
  name: sortinghat-config
data:
  config.json: |
    {
      "port": {{ .Values.sortinghat.config.port | quote }}
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sortinghat
spec:
  replicas: {{ .Values.sortinghat.replicaCount }}
  selector:
    matchLabels:
      app: sortinghat
  template:
    metadata:
      labels:
        app: sortinghat
        version: {{ .Values.sortinghat.image.tag | default .Values.global.imageTag }}
    spec:
      serviceAccountName: sortinghat-sa
      containers:
        - name: sortinghat
          image: "{{ .Values.sortinghat.image.repository }}:{{ .Values.sortinghat.image.tag | default .Values.global.imageTag }}"
          ports:
            - containerPort: {{ .Values.sortinghat.config.port | int }}
          env:
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: endpoint
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: secret_key
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: region
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sortinghat.secrets.s3 }}
                  key: bucket
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "3Gi"
              cpu: "3"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/sortinghat-config
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.sortinghat.config.port | int }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.sortinghat.config.port | int }}
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: config-volume
          configMap:
            name: sortinghat-config
---
apiVersion: v1
kind: Service
metadata:
  name: sortinghat
spec:
  selector:
    app: sortinghat
  ports:
    - protocol: TCP
      port: {{ .Values.sortinghat.service.port }}
      targetPort: {{ .Values.sortinghat.config.port | int }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sortinghat-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-sortinghat-full-access-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: full-access
subjects:
  - kind: ServiceAccount
    name: sortinghat-sa
    namespace: {{ .Release.Namespace }}
