apiVersion: batch/v1
kind: Job
metadata:
  name: sqitch
  namespace: vetchium-dev
  labels:
    app: sqitch
spec:
  backoffLimit: 5
  template:
    metadata:
      labels:
        app: sqitch
    spec:
      serviceAccountName: sqitch-sa
      initContainers:
        - name: wait-for-postgres
          image: bitnami/kubectl:latest
          command: ["sh", "-c"]
          args:
            - |
              until kubectl get pods -l app=postgres -o jsonpath='{.items[*].status.conditions[?(@.type=="Ready")].status}' | grep -q "True"; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 5
              done
      containers:
        - name: sqitch
          image: vetchium/sqitch
          command: ["sh", "-c"]
          args:
            - |
              set -e
              URI=$(cat /mnt/secrets/uri | sed 's|postgresql://|db:pg://|')
              sqitch deploy --verbose "${URI}"
              sqitch verify --verbose "${URI}"
          volumeMounts:
            - name: postgres-creds
              mountPath: /mnt/secrets
              readOnly: true
      volumes:
        - name: postgres-creds
          secret:
            secretName: postgres-app
      restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vetchium-tags-creat
  namespace: vetchium-dev
  labels:
    app: vetchium-tags-creat
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: vetchium-tags-creat
    spec:
      serviceAccountName: sqitch-sa
      initContainers:
        - name: wait-for-sqitch
          image: bitnami/kubectl:latest
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for sqitch job to complete..."
              until kubectl wait --for=condition=complete job/sqitch --timeout=600s -n vetchium-dev; do
                echo "Sqitch job not complete yet, waiting..."
                sleep 10
              done
              echo "Sqitch job completed successfully"
      containers:
        - name: vetchium-tags-creat
          image: vetchium/sqitch
          command: ["sh", "-c"]
          args:
            - |
              set -e
              echo "Starting vetchium-tags-creat job..."

              # Get the PostgreSQL connection URI
              URI=$(cat /mnt/secrets/uri)
              echo "Connecting to database..."

              # Read and process the JSON file to insert tags
              echo "Processing vetchium-tags.json..."
              cat /vetchi/migrations/vetchium-tags.json | jq -r '.[] | "INSERT INTO tags (id, display_name) VALUES (\047" + .id + "\047, \047" + .display_name + "\047) ON CONFLICT (id) DO NOTHING;"' | psql "${URI}"

              echo "Tags insertion completed successfully"
          volumeMounts:
            - name: postgres-creds
              mountPath: /mnt/secrets
              readOnly: true
      volumes:
        - name: postgres-creds
          secret:
            secretName: postgres-app
      restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sqitch-sa
  namespace: vetchium-dev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sqitch-full-access-binding-devtest
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: full-access
subjects:
  - kind: ServiceAccount
    name: sqitch-sa
    namespace: vetchium-dev
