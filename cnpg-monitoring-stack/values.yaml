# cnpg-monitoring-stack/values.yaml

# Configuration for the cloudnative-pg chart
cloudnative-pg:
  # Enable monitoring features within the CNPG operator itself
  monitoring:
    # Automatically create ServiceMonitors for Prometheus Operator to discover PostgreSQL metrics endpoints
    serviceMonitor:
      enabled: true
      # If your kube-prometheus-stack release is named differently than 'prometheus',
      # or uses different labels for discovery, adjust these labels.
      # Default labels usually work if kube-prometheus-stack is installed with default settings.
      # prometheusInstance: "prometheus" # Example if needed
    # Automatically create a ConfigMap containing the official CloudNativePG Grafana dashboard JSON
    grafanaDashboard:
      enabled: true
      # Ensure this label matches what the Grafana sidecar (from kube-prometheus-stack) looks for.
      # Default is usually 'grafana_dashboard: "1"' which kube-prometheus-stack typically discovers.
      label: grafana_dashboard # Default label key
      labelValue: "1" # Default label value

# Configuration for the kube-prometheus-stack chart
kube-prometheus-stack:
  # Core Prometheus Operator settings (adjust resource requests/limits as needed)
  prometheusOperator:
    enabled: true

  # Prometheus instance settings (adjust resources, retention, etc. as needed)
  prometheus:
    enabled: true
    prometheusSpec:
      # Crucial: Allow Prometheus to discover ServiceMonitors created outside its own Helm release
      # (like the one created by the cloudnative-pg chart dependency)
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      # replicaCount: 1 # Adjust as needed
      # storageSpec: # Configure persistent storage for Prometheus data
      #   volumeClaimTemplate:
      #     spec:
      #       storageClassName: standard # Your storage class
      #       accessModes: ["ReadWriteOnce"]
      #       resources:
      #         requests:
      #           storage: 50Gi # Adjust size

  # Grafana instance settings
  grafana:
    enabled: true
    # Set admin password (or leave unset to get a generated one from a secret)
    # adminPassword: "YourSecurePassword" # Change this!
    # Ensure Grafana automatically discovers dashboards from ConfigMaps
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard # Must match the label set in cloudnative-pg.monitoring.grafanaDashboard.label
        labelValue: "1" # Must match the label set in cloudnative-pg.monitoring.grafanaDashboard.labelValue
        searchNamespace: ALL # Search all namespaces for dashboard ConfigMaps
    # Default Kubernetes dashboards are usually included by kube-prometheus-stack itself.
    # Check the chart's values for options like `defaultDashboardsEnabled: true` (often default)
    # persistence: # Configure persistent storage for Grafana data/settings
    #   enabled: true
    #   type: pvc
    #   storageClassName: standard # Your storage class
    #   accessModes: ["ReadWriteOnce"]
    #   size: 10Gi # Adjust size

  # Other components (Enable/disable/configure as needed)
  alertmanager:
    enabled: true # Or false if you don't need alerting
    # alertmanagerSpec:
    #   storage:
    #     volumeClaimTemplate:
    #       spec:
    #         storageClassName: standard
    #         accessModes: ["ReadWriteOnce"]
    #         resources:
    #           requests:
    #             storage: 10Gi

  nodeExporter:
    enabled: true # For Node metrics

  kubeStateMetrics:
    enabled: true # For Kubernetes object state metrics


  # Optional: Disable components you don't need to save resources
  # kubeApiServer:
  #   enabled: false
  # kubelet:
  #   enabled: true # Usually needed for pod metrics
  # coreDns:
  #   enabled: false
  # kubeControllerManager:
  #   enabled: false
  # kubeEtcd:
  #   enabled: false
  # kubeProxy:
  #   enabled: false
  # kubeScheduler:
  #   enabled: false
