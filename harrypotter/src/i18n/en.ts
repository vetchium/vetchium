export const en = {
  common: {
    error: "Error",
    home: "Home",
    openings: "Openings",
    logout: "Logout",
    loading: "Loading...",
    generalError: "Error",
    retry: "Retry",
    costCenters: "Cost Centers",
    locations: "Locations",
    settings: "Settings",
    posts: "Posts",
    actions: "Actions",
    add: "Add",
    save: "Save",
    cancel: "Cancel",
    warning: "Warning",
    proceed: "Proceed",
    external_url_warning:
      "You are about to leave Vetchium and visit an external website. This link has not been verified by Vetchi. Please proceed with caution.",
    loadMore: "Load More",
    serverError: "Please try again after some time.",
    none: "None",
    back: "Back",
    headerTitle: "Vetchium for Employers",
    success: "Success",
    redirecting: "Redirecting to login page in {{seconds}} seconds...",
  },
  auth: {
    signin: "Sign In",
    domain: "Domain",
    email: "Email",
    password: "Password",
    tfa: "Two Factor Authentication",
    tfaCode: "Enter TFA Code",
    verify: "Verify",
    submit: "Submit",
    rememberMe: "Remember me",
    domainNotVerifiedDetail:
      "TXT record `vetchiumadmin.<your_domain>` not found or is incorrect. Please verify your DNS settings. Propagation may take a few hours.",
    domainVerifyPendingDetail:
      "Domain verified! An onboarding email has been sent to the admin email specified in the TXT record. Please ask them to complete the process.",
    accountDisabled: "Your account has been disabled.",
    invalidCredentials: "Invalid credentials.",
    unauthorized: "Unauthorized access",
    domainHelperText:
      "Add a TXT record for `vetchiumadmin.<your_domain>` with your admin email as the value. DNS changes can take a few hours to propagate.",
    signupOrgUser: "Set Up Organization User",
    confirmPassword: "Confirm Password",
    passwordSetupSuccess: "Password set successfully. Please sign in.",
    passwordsDontMatch: "Passwords don't match",
    expiredOrInvalidToken: "The token is either expired or invalid.",
    setPassword: "Set Password",
    completeSignup: "Complete Signup",
  },
  dashboard: {
    welcome: "Welcome to your dashboard",
  },
  openings: {
    title: "Job Openings",
    noOpenings: "No openings found",
    create: "Create Opening",
    createTitle: "Create New Opening",
    openingTitle: "Title",
    positions: "Number of Positions",
    jobDescription: "Job Description",
    recruiter: "Recruiter",
    hiringManager: "Hiring Manager",
    costCenter: "Cost Center",
    type: "Opening Type",
    stateLabel: "State",
    minYoe: "Minimum Years of Experience",
    maxYoe: "Maximum Years of Experience",
    minEducation: "Minimum Education Level",
    employerNotes: "Employer Notes",
    locations: "Locations",
    physicalLocations: "Office Locations",
    remoteWork: "Remote Work",
    remoteTimezones: "Remote Timezones",
    remoteCountries: "Remote Countries",
    noLocationsError: "No locations specified",
    remoteTimezonesHelp:
      "Select the timezones where remote work is allowed. Leave empty if remote work is not allowed.",
    officeLocations: "Office Locations",
    officeLocationsHelp:
      "Select the office locations where this position is available. Leave empty if the position is fully remote.",
    globallyRemote: "Globally Remote (Available worldwide)",
    remoteCountriesHelp:
      "Select the countries where remote work is allowed. Leave empty if remote work is not allowed.",
    locationRequiredError:
      "Please select at least one location option (office locations, remote timezones, remote countries) or mark the position as globally remote.",
    showClosed: "Show Closed Openings",
    backToOpening: "Back to Opening",
    backToList: "Back to All Openings",
    types: {
      FULL_TIME_OPENING: "Full Time",
      PART_TIME_OPENING: "Part Time",
      CONTRACT_OPENING: "Contract",
      INTERNSHIP_OPENING: "Internship",
      UNSPECIFIED_OPENING: "Unspecified",
    },
    education: {
      BACHELOR_EDUCATION: "Bachelor's Degree",
      MASTER_EDUCATION: "Master's Degree",
      DOCTORATE_EDUCATION: "Doctorate",
      NOT_MATTERS_EDUCATION: "Not Required",
      UNSPECIFIED_EDUCATION: "Unspecified",
    },
    state: {
      DRAFT_OPENING_STATE: "Draft",
      ACTIVE_OPENING_STATE: "Active",
      SUSPENDED_OPENING_STATE: "Suspended",
      CLOSED_OPENING_STATE: "Closed",
    },
    details: "Opening Details",
    id: "Opening ID",
    filledPositions: "Filled Positions",
    description: "Description",
    contacts: "Contact Information",
    actions: "Actions",
    publish: "Publish Opening",
    suspend: "Suspend Opening",
    reactivate: "Reactivate Opening",
    viewCandidacies: "View Candidacies",
    viewInterviews: "View Interviews",
    invalidStateTransition: "Invalid state transition",
    notFound: "Opening not found",
    fetchError: "Failed to fetch openings",
    createError: "Failed to create opening",
    fetchCostCentersError: "Failed to fetch cost centers",
    fetchLocationsError: "Failed to fetch locations",
    missingUserError: "Please select both recruiter and hiring manager",
    close: "Close Opening",
    closeConfirmTitle: "Close Opening",
    closeConfirmMessage:
      "Are you sure you want to close this opening? This action cannot be undone.",
    confirmClose: "Yes, Close Opening",
    stateChangeSuccess: "Opening state updated successfully",
    viewApplications: "View Applications",
    tags: "Opening Tags",
    selectTags: "Select Existing Tags",
    selectTagsPlaceholder: "Type to search or select tags...",
    tagsHelp: "Select up to 3 tags that best describe this opening",
    addNewTag: "Add New Tag",
    addNewTagPlaceholder: "Type a new tag and click Add",
    newTagHelp: "Can't find what you need? Add a new tag (max 3 tags total)",
    maxTagsError: "Maximum of 3 tags allowed (existing + new tags combined)",
    maxTagsReached: "Maximum tags reached (3)",
    noTagsFound: "No matching tags found",
    tagsRequiredError: "Please select at least one tag or add a new tag",
    fetchTagsError: "Failed to fetch opening tags",
    tagLengthError: "Tag must not exceed 32 characters",
    tagsRequired: "At least one tag is required",
    selectOrCreateTag: "Type to search or create a tag",
    createNewTag: "Press Enter to create a new tag",
  },
  costCenters: {
    title: "Cost Centers",
    addTitle: "Add Cost Center",
    editTitle: "Edit Cost Center",
    name: "Name",
    notes: "Notes",
    state: "State",
    add: "Add Cost Center",
    active: "Active",
    defunct: "Defunct",
    includeDefunct: "Show Defunct Cost Centers",
    noCostCenters:
      "No cost centers found. Click 'Add Cost Center' to create one.",
    fetchError: "Failed to fetch cost centers",
    addError: "Failed to add cost center",
    updateError: "Failed to update cost center",
    defunctError: "Failed to defunct cost center",
  },
  locations: {
    title: "Locations",
    addTitle: "Add Location",
    editTitle: "Edit Location",
    locationTitle: "Title",
    countryCode: "Country Code",
    countryCodeHelp: "Enter 3-letter ISO country code (e.g., USA, IND, GBR)",
    postalAddress: "Postal Address",
    postalCode: "Postal Code",
    mapUrl: "OpenStreetMap URL",
    cityAka: "Alternative City Names",
    cityAkaPlaceholder: "Enter alternative city name",
    state: "State",
    active: "Active",
    defunct: "Defunct",
    add: "Add Location",
    fetchError: "Failed to fetch locations",
    addError: "Failed to add location",
    updateError: "Failed to update location",
    defunctError: "Failed to defunct location",
    noLocations: "No locations found. Click 'Add Location' to create one.",
    includeDefunct: "Include Defunct Locations",
    viewMap: "View on Map",
  },
  validation: {
    title: {
      lengthError: "Title must be between 3 and 32 characters",
    },
    name: {
      length: {
        "2.64": "Name must be between 2 and 64 characters",
      },
      required: "Name is required",
    },
    email: {
      invalid: "Please enter a valid email address",
      required: "Email is required",
    },
    positions: {
      range: {
        "1.20": "Number of positions must be between 1 and 20",
      },
    },
    jobDescription: {
      lengthError: "Job description must be between 10 and 1024 characters",
    },
    employerNotes: {
      maxLength: {
        "1024": "Employer notes must not exceed 1024 characters",
      },
    },
    roles: {
      required: "At least one role must be selected",
    },
  },
  applications: {
    title: "Applications",
    filterByColor: "Filter by Color",
    allColors: "All Colors",
    colorGreen: "Green",
    colorYellow: "Yellow",
    colorRed: "Red",
    removeColor: "Remove Color",
    shortlist: "Shortlist",
    reject: "Reject",
    resumePreview: "Resume Preview",
    noApplications: "No applications found",
    setColor: "Set Color",
    noColor: "No color tag",
    clickToPreview: "Click to preview resume",
    pdfPreviewNotAvailable: "PDF preview not available",
    lastEmployer: "Last Employer",
    endorsers: "Endorsers",
    noEndorsers: "No endorsers",
    endorser: "Endorser",
    aiCompatibilityScore: "AI Compatibility Score",
    modelScore: "{{modelName}}",
  },
  candidacies: {
    title: "Candidacies",
    view: "View Candidacies",
    viewCandidacy: "View Candidacy",
    candidacyDetails: "Candidacy Details",
    noCandidacies: "No candidacies found for this opening.",
    fetchError: "Failed to fetch candidacies",
    applicantName: "Applicant Name",
    handle: "Handle",
    state: "State",
    filterPlaceholder: "Filter by",
    stateChanges: "Change State",
    makeOffer: {
      title: "Make Offer",
      description:
        "Upload an offer letter (PDF) and change the candidacy state to OFFERED. All pending interviews will be marked as cancelled.",
      button: "Make Offer",
      confirmTitle: "Confirm Make Offer",
      confirmDescription:
        "Are you sure you want to make an offer to this candidate?",
      uploadButton: "Upload Offer Letter (PDF)",
      selectedFile: "Selected file:",
      error: "Failed to make offer to candidate",
      success: "Offer has been successfully made to the candidate",
    },
    reject: {
      title: "Reject Candidacy",
      description:
        "Mark the candidate as unsuitable for this position. All pending interviews will be marked as cancelled.",
      button: "Reject Candidate",
      confirmTitle: "Confirm Reject Candidacy",
      confirmDescription: "Are you sure you want to reject this candidate?",
    },
    markUnresponsive: {
      title: "Mark as Unresponsive",
      description:
        "Mark the candidate as unresponsive if they have not been responding to communications. All pending interviews will be marked as cancelled.",
      button: "Mark Unresponsive",
      confirmTitle: "Confirm Mark as Unresponsive",
      confirmDescription:
        "Are you sure you want to mark this candidate as unresponsive?",
    },
    dialogActions: {
      confirm: "Confirm",
      cancel: "Cancel",
      dialogCancel: "Cancel",
    },
    dialogWarning: "This action cannot be undone.",
    dialogEffects: {
      title: "This action will:",
      cancelInterviews: "Mark all pending interviews as cancelled",
      stateChange: "Change the candidacy state to",
      uploadOffer: "Upload the offer letter",
    },
    states: {
      INTERVIEWING: "Interviewing",
      OFFERED: "Offered",
      OFFER_ACCEPTED: "Offer Accepted",
      OFFER_DECLINED: "Offer Declined",
      CANDIDATE_UNSUITABLE: "Candidate Unsuitable",
      CANDIDATE_NOT_RESPONDING: "Not Responding",
      CANDIDATE_WITHDREW: "Candidate Withdrew",
      EMPLOYER_DEFUNCT: "Employer Defunct",
    },
  },
  interviews: {
    title: "Interviews",
    addNew: "Add Interview",
    type: "Type",
    startTime: "Start Time",
    endTime: "End Time",
    state: "State",
    description: "Description",
    timezone: "Timezone",
    interviewers: "Interviewers",
    otherInterviewers: "Other Interviewers",
    yourRSVP: "Your RSVP status for Interview",
    noInterviewers: "No interviewers assigned",
    manage: "Manage Interview",
    manageInterview: "Manage Interview",
    details: "Interview Details",
    candidate: "Candidate",
    placeholder: "Interview management page is under construction",
    noInterviews: "No interviews scheduled",
    allowPastDates: "Allow setting dates in the past",
    endTimeBeforeStart: "End time cannot be before or equal to start time",
    use24HourFormat: "Use 24-hour time format",
    you: "You",
    types: {
      VIDEO_CALL: "Video Call",
      IN_PERSON: "In Person",
      TAKE_HOME: "Take Home",
      OTHER_INTERVIEW: "Other",
    },
    states: {
      SCHEDULED_INTERVIEW: "Scheduled",
      COMPLETED_INTERVIEW: "Completed",
      CANCELLED_INTERVIEW: "Cancelled",
    },
    addError: "Failed to add interview",
    fetchError: "Failed to fetch interviews",
    rsvp: {
      yes: "Accept",
      no: "Decline",
      confirmYes: "Accept Interview",
      confirmNo: "Decline Interview",
      confirmYesMessage:
        "Are you sure you want to accept this interview? The employer will be notified of your response.",
      confirmNoMessage:
        "Are you sure you want to decline this interview? The employer will be notified of your response.",
      confirmChangeYesMessage:
        "Are you sure you want to change your response to accept? The employer will be notified of this change.",
      confirmChangeNoMessage:
        "Are you sure you want to change your response to decline? The employer will be notified of this change.",
    },
    assessment: {
      title: "Interview Assessment",
      rating: "Rating",
      ratingPlaceholder: "Select your rating for the candidate",
      editFeedback: "Edit Feedback",
      feedback: "Feedback to Candidate (Public)",
      feedbackPlaceholder:
        "Enter feedback that will be shared with the candidate. This feedback will be visible to the candidate.",
      positives: "Positives",
      positivesPlaceholder:
        "Enter positive aspects of the candidate's performance",
      negatives: "Negatives",
      negativesPlaceholder:
        "Enter negative aspects of the candidate's performance",
      overallAssessment: "Overall Assessment",
      overallAssessmentPlaceholder:
        "Enter your overall assessment of the candidate",
      save: "Save Assessment",
      saveSuccess: "Assessment saved successfully",
      saveError: "Failed to save assessment",
      notFoundError: "Interview not found",
      validationError: "Please check your input and try again",
      forbiddenError: "You do not have permission to update this assessment",
      fetchError: "Failed to fetch assessment",
      lastUpdated: "Last updated by {{name}} on {{date}}",
      rsvpError: "Failed to update RSVP status",
      rsvpSuccess: "RSVP status updated successfully",
      invalidStateError: "Interview is not in a valid state for RSVP",
      markAsCompleted: "Mark Interview as Completed",
      ratings: {
        STRONG_YES: "Strong Yes",
        YES: "Yes",
        NEUTRAL: "Neutral",
        NO: "No",
        STRONG_NO: "Strong No",
      },
    },
  },
  comments: {
    title: "Comments",
    add: "Add Comment",
    addPlaceholder: "Write your comment here...",
    noComments: "No comments yet",
  },
  orgUsers: {
    title: "Users",
    addTitle: "Add Organization User",
    email: "Email",
    name: "Name",
    rolesList: "Roles",
    state: "State",
    add: "Add User",
    disable: "Disable User",
    enable: "Enable User",
    noUsers: "No users found. Click 'Add User' to create one.",
    fetchError: "Failed to fetch organization users",
    addError: "Failed to add user",
    disableError: "Failed to disable user",
    enableError: "Failed to enable user",
    searchPlaceholder: "Search by email or name",
    addSuccess: "User added successfully",
    disableSuccess: "User disabled successfully",
    enableSuccess: "User enabled successfully",
    includeDisabled: "Show Disabled Users",
    states: {
      ACTIVE_ORG_USER: "Active",
      ADDED_ORG_USER: "Added",
      DISABLED_ORG_USER: "Disabled",
    },
    roles: {
      ADMIN: "Admin",
      ORG_USERS_CRUD: "Org Users Manager",
      ORG_USERS_VIEWER: "Org Users Viewer",
      COST_CENTERS_CRUD: "Cost Centers Manager",
      COST_CENTERS_VIEWER: "Cost Centers Viewer",
      LOCATIONS_CRUD: "Locations Manager",
      LOCATIONS_VIEWER: "Locations Viewer",
      OPENINGS_CRUD: "Openings Manager",
      OPENINGS_VIEWER: "Openings Viewer",
      APPLICATIONS_CRUD: "Applications Manager",
      APPLICATIONS_VIEWER: "Applications Viewer",
    },
    confirmDisable: {
      modalTitle: "Disable User",
      message:
        "Are you sure you want to disable this user? They will no longer be able to access the system.",
      confirmButton: "Yes, Disable User",
      cancelButton: "Cancel",
    },
  },
  hubUsers: {
    profile: "User Profile",
    notFound: "User not found",
    shortBio: "About",
    longBio: "Detailed Bio",
    verifiedOfficialEmailDomains: "Verified Official Email Domains",
    fetchError: "Failed to fetch user profile",
    workHistory: "Work History",
    currentlyWorking: "Present",
    employmentPeriod: "{{startDate}} - {{endDate}}",
    noWorkHistory: "No work history available",
    education: "Education",
    educationDegree: "Degree",
    currentlyStudying: "Present",
    noEducation: "No education information available",
  },
  errors: {
    fetchFailed: "Failed to fetch data",
    serverError: "An error occurred. Please try again later.",
  },
  achievements: {
    patents: {
      title: "Patents",
      noEntries: "No patents available",
      url: "View Patent",
      error: {
        fetchFailed: "Failed to fetch patents",
      },
    },
    publications: {
      title: "Publications",
      noEntries: "No publications available",
      url: "View Publication",
      error: {
        fetchFailed: "Failed to fetch publications",
      },
    },
    certifications: {
      title: "Certifications",
      noEntries: "No certifications available",
      url: "View Certificate",
      error: {
        fetchFailed: "Failed to fetch certifications",
      },
    },
  },
  settings: {
    title: "Settings",
    coolOffPeriod: {
      title: "Cool-off Period",
      description:
        "Set the cool-off period in days for candidates who have been rejected",
      current: "Current cool-off period: {{days}} days",
      update: "Update Cool-off Period",
      success: "Cool-off period updated successfully",
      error: "Failed to update cool-off period",
      fetchError: "Failed to fetch cool-off period",
    },
  },
  posts: {
    title: "Posts",
    compose: "Compose",
    content: "Content",
    post: "Post",
    cancel: "Cancel",
    timeline: "Timeline",
    trending: "Trending",
    following: "Following",
    noPostsFound: "No posts found",
    deleteConfirm: "Are you sure you want to delete this post?",
    deleteSuccess: "Post deleted successfully",
    createSuccess: "Post created successfully",
    updateSuccess: "Post updated successfully",
    fetchError: "Failed to fetch posts",
    createError: "Failed to create post",
    updateError: "Failed to update post",
    deleteError: "Failed to delete post",
    contentRequired: "Content is required",
    contentTooLong: "Content cannot exceed 4096 characters",
    loadMore: "Load More",
    tags: "Tags",
    addTags: "Add Tags",
    existingTags: "Existing Tags",
    newTags: "New Tags",
    maxTagsReached: "Maximum of 3 tags allowed",
  },
};
